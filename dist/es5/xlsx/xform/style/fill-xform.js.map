{"version":3,"file":"fill-xform.js","names":["BaseXform","require","ColorXform","StopXform","_BaseXform","_inherits","_super","_createSuper","_this","_classCallCheck","call","map","color","_createClass","key","get","value","render","xmlStream","model","openNode","addAttribute","position","closeNode","parseOpen","node","parser","name","parseFloat","attributes","parseText","parseClose","undefined","PatternFillXform","_BaseXform2","_super2","_this2","fgColor","bgColor","pattern","type","patternType","text","GradientFillXform","_BaseXform3","_super3","_this3","stop","gradient","degree","center","left","right","top","bottom","stopXform","stops","forEach","stopModel","parseInt","push","FillXform","_BaseXform4","_super4","_this4","patternFill","gradientFill","addRollback","rollback","commit","validStyle","validPatternValues","reduce","p","v","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/fill-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst BaseXform = require('../base-xform');\n\nconst ColorXform = require('./color-xform');\n\nclass StopXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      color: new ColorXform(),\n    };\n  }\n\n  get tag() {\n    return 'stop';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('stop');\n    xmlStream.addAttribute('position', model.position);\n    this.map.color.render(xmlStream, model.color);\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'stop':\n        this.model = {\n          position: parseFloat(node.attributes.position),\n        };\n        return true;\n      case 'color':\n        this.parser = this.map.color;\n        this.parser.parseOpen(node);\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.color = this.parser.model;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nclass PatternFillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      fgColor: new ColorXform('fgColor'),\n      bgColor: new ColorXform('bgColor'),\n    };\n  }\n\n  get name() {\n    return 'pattern';\n  }\n\n  get tag() {\n    return 'patternFill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('patternFill');\n    xmlStream.addAttribute('patternType', model.pattern);\n    if (model.fgColor) {\n      this.map.fgColor.render(xmlStream, model.fgColor);\n    }\n    if (model.bgColor) {\n      this.map.bgColor.render(xmlStream, model.bgColor);\n    }\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'patternFill':\n        this.model = {\n          type: 'pattern',\n          pattern: node.attributes.patternType,\n        };\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        if (this.parser.model) {\n          this.model[name] = this.parser.model;\n        }\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nclass GradientFillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      stop: new StopXform(),\n    };\n    // if (model) {\n    //   this.gradient = model.gradient;\n    //   if (model.center) {\n    //     this.center = model.center;\n    //   }\n    //   if (model.degree !== undefined) {\n    //     this.degree = model.degree;\n    //   }\n    //   this.stops = model.stops.map(function(stop) { return new StopXform(stop); });\n    // } else {\n    //   this.stops = [];\n    // }\n  }\n\n  get name() {\n    return 'gradient';\n  }\n\n  get tag() {\n    return 'gradientFill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('gradientFill');\n    switch (model.gradient) {\n      case 'angle':\n        xmlStream.addAttribute('degree', model.degree);\n        break;\n      case 'path':\n        xmlStream.addAttribute('type', 'path');\n        if (model.center.left) {\n          xmlStream.addAttribute('left', model.center.left);\n          if (model.center.right === undefined) {\n            xmlStream.addAttribute('right', model.center.left);\n          }\n        }\n        if (model.center.right) {\n          xmlStream.addAttribute('right', model.center.right);\n        }\n        if (model.center.top) {\n          xmlStream.addAttribute('top', model.center.top);\n          if (model.center.bottom === undefined) {\n            xmlStream.addAttribute('bottom', model.center.top);\n          }\n        }\n        if (model.center.bottom) {\n          xmlStream.addAttribute('bottom', model.center.bottom);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    const stopXform = this.map.stop;\n    model.stops.forEach(stopModel => {\n      stopXform.render(xmlStream, stopModel);\n    });\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'gradientFill': {\n        const model = (this.model = {\n          stops: [],\n        });\n        if (node.attributes.degree) {\n          model.gradient = 'angle';\n          model.degree = parseInt(node.attributes.degree, 10);\n        } else if (node.attributes.type === 'path') {\n          model.gradient = 'path';\n          model.center = {\n            left: node.attributes.left ? parseFloat(node.attributes.left) : 0,\n            top: node.attributes.top ? parseFloat(node.attributes.top) : 0,\n          };\n          if (node.attributes.right !== node.attributes.left) {\n            model.center.right = node.attributes.right ? parseFloat(node.attributes.right) : 0;\n          }\n          if (node.attributes.bottom !== node.attributes.top) {\n            model.center.bottom = node.attributes.bottom ? parseFloat(node.attributes.bottom) : 0;\n          }\n        }\n        return true;\n      }\n\n      case 'stop':\n        this.parser = this.map.stop;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.stops.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\n// Fill encapsulates translation from fill model to/from xlsx\nclass FillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      patternFill: new PatternFillXform(),\n      gradientFill: new GradientFillXform(),\n    };\n  }\n\n  get tag() {\n    return 'fill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.addRollback();\n    xmlStream.openNode('fill');\n    switch (model.type) {\n      case 'pattern':\n        this.map.patternFill.render(xmlStream, model);\n        break;\n      case 'gradient':\n        this.map.gradientFill.render(xmlStream, model);\n        break;\n      default:\n        xmlStream.rollback();\n        return;\n    }\n    xmlStream.closeNode();\n    xmlStream.commit();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'fill':\n        this.model = {};\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model = this.parser.model;\n        this.model.type = this.parser.name;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  validStyle(value) {\n    return FillXform.validPatternValues[value];\n  }\n}\n\nFillXform.validPatternValues = [\n  'none',\n  'solid',\n  'darkVertical',\n  'darkGray',\n  'mediumGray',\n  'lightGray',\n  'gray125',\n  'gray0625',\n  'darkHorizontal',\n  'darkVertical',\n  'darkDown',\n  'darkUp',\n  'darkGrid',\n  'darkTrellis',\n  'lightHorizontal',\n  'lightVertical',\n  'lightDown',\n  'lightUp',\n  'lightGrid',\n  'lightTrellis',\n  'lightGrid',\n].reduce((p, v) => {\n  p[v] = true;\n  return p;\n}, {});\n\nFillXform.StopXform = StopXform;\nFillXform.PatternFillXform = PatternFillXform;\nFillXform.GradientFillXform = GradientFillXform;\n\nmodule.exports = FillXform;\n"],"mappings":"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"}