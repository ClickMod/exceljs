{"version":3,"file":"static-xform.js","names":["BaseXform","require","XmlStream","build","xmlStream","model","openNode","tag","$","c","forEach","child","t","writeText","closeNode","StaticXform","_BaseXform","_inherits","_super","_createSuper","_this","_classCallCheck","call","_model","_createClass","key","value","render","_xml","stream","xml","writeXml","parseOpen","parseText","parseClose","name","module","exports"],"sources":["../../../../lib/xlsx/xform/static-xform.js"],"sourcesContent":["const BaseXform = require('./base-xform');\nconst XmlStream = require('../../utils/xml-stream');\n\n// const model = {\n//   tag: 'name',\n//   $: {attr: 'value'},\n//   c: [\n//     { tag: 'child' }\n//   ],\n//   t: 'some text'\n// };\n\nfunction build(xmlStream, model) {\n  xmlStream.openNode(model.tag, model.$);\n  if (model.c) {\n    model.c.forEach(child => {\n      build(xmlStream, child);\n    });\n  }\n  if (model.t) {\n    xmlStream.writeText(model.t);\n  }\n  xmlStream.closeNode();\n}\n\nclass StaticXform extends BaseXform {\n  constructor(model) {\n    super();\n\n    // This class is an optimisation for static (unimportant and unchanging) xml\n    // It is stateless - apart from its static model and so can be used as a singleton\n    // Being stateless - it will only track entry to and exit from it's root xml tag during parsing and nothing else\n    // Known issues:\n    //    since stateless - parseOpen always returns true. Parent xform must know when to start using this xform\n    //    if the root tag is recursive, the parsing will behave unpredictably\n    this._model = model;\n  }\n\n  render(xmlStream) {\n    if (!this._xml) {\n      const stream = new XmlStream();\n      build(stream, this._model);\n      this._xml = stream.xml;\n    }\n    xmlStream.writeXml(this._xml);\n  }\n\n  parseOpen() {\n    return true;\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    switch (name) {\n      case this._model.tag:\n        return false;\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = StaticXform;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;AACzC,IAAMC,SAAS,GAAGD,OAAO,CAAC,wBAAwB,CAAC;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASE,KAAKA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC/BD,SAAS,CAACE,QAAQ,CAACD,KAAK,CAACE,GAAG,EAAEF,KAAK,CAACG,CAAC,CAAC;EACtC,IAAIH,KAAK,CAACI,CAAC,EAAE;IACXJ,KAAK,CAACI,CAAC,CAACC,OAAO,CAAC,UAAAC,KAAK,EAAI;MACvBR,KAAK,CAACC,SAAS,EAAEO,KAAK,CAAC;IACzB,CAAC,CAAC;EACJ;EACA,IAAIN,KAAK,CAACO,CAAC,EAAE;IACXR,SAAS,CAACS,SAAS,CAACR,KAAK,CAACO,CAAC,CAAC;EAC9B;EACAR,SAAS,CAACU,SAAS,CAAC,CAAC;AACvB;AAAC,IAEKC,WAAW,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,WAAA;EACf,SAAAA,YAAYV,KAAK,EAAE;IAAA,IAAAe,KAAA;IAAAC,eAAA,OAAAN,WAAA;IACjBK,KAAA,GAAAF,MAAA,CAAAI,IAAA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACAF,KAAA,CAAKG,MAAM,GAAGlB,KAAK;IAAC,OAAAe,KAAA;EACtB;EAACI,YAAA,CAAAT,WAAA;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAOvB,SAAS,EAAE;MAChB,IAAI,CAAC,IAAI,CAACwB,IAAI,EAAE;QACd,IAAMC,MAAM,GAAG,IAAI3B,SAAS,CAAC,CAAC;QAC9BC,KAAK,CAAC0B,MAAM,EAAE,IAAI,CAACN,MAAM,CAAC;QAC1B,IAAI,CAACK,IAAI,GAAGC,MAAM,CAACC,GAAG;MACxB;MACA1B,SAAS,CAAC2B,QAAQ,CAAC,IAAI,CAACH,IAAI,CAAC;IAC/B;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAM,UAAA,EAAY;MACV,OAAO,IAAI;IACb;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAED,SAAAO,UAAA,EAAY,CAAC;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAEd,SAAAQ,WAAWC,IAAI,EAAE;MACf,QAAQA,IAAI;QACV,KAAK,IAAI,CAACZ,MAAM,CAAChB,GAAG;UAClB,OAAO,KAAK;QACd;UACE,OAAO,IAAI;MACf;IACF;EAAC;EAAA,OAAAQ,WAAA;AAAA,EAnCuBf,SAAS;AAsCnCoC,MAAM,CAACC,OAAO,GAAGtB,WAAW"}