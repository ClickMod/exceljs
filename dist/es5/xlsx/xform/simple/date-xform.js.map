{"version":3,"file":"date-xform.js","names":["BaseXform","require","DateXform","_BaseXform","_inherits","_super","_createSuper","options","_this","_classCallCheck","call","tag","attr","attrs","_format","format","dt","Number","isNaN","getTime","toISOString","e","_parse","parse","str","Date","_createClass","key","value","render","xmlStream","model","openNode","addAttributes","addAttribute","writeText","closeNode","parseOpen","node","name","attributes","text","parseText","push","parseClose","join","module","exports"],"sources":["../../../../../lib/xlsx/xform/simple/date-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\n\nclass DateXform extends BaseXform {\n  constructor(options) {\n    super();\n\n    this.tag = options.tag;\n    this.attr = options.attr;\n    this.attrs = options.attrs;\n    this._format =\n      options.format ||\n      function(dt) {\n        try {\n          if (Number.isNaN(dt.getTime())) return '';\n          return dt.toISOString();\n        } catch (e) {\n          return '';\n        }\n      };\n    this._parse =\n      options.parse ||\n      function(str) {\n        return new Date(str);\n      };\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      xmlStream.openNode(this.tag);\n      if (this.attrs) {\n        xmlStream.addAttributes(this.attrs);\n      }\n      if (this.attr) {\n        xmlStream.addAttribute(this.attr, this._format(model));\n      } else {\n        xmlStream.writeText(this._format(model));\n      }\n      xmlStream.closeNode();\n    }\n  }\n\n  parseOpen(node) {\n    if (node.name === this.tag) {\n      if (this.attr) {\n        this.model = this._parse(node.attributes[this.attr]);\n      } else {\n        this.text = [];\n      }\n    }\n  }\n\n  parseText(text) {\n    if (!this.attr) {\n      this.text.push(text);\n    }\n  }\n\n  parseClose() {\n    if (!this.attr) {\n      this.model = this._parse(this.text.join(''));\n    }\n    return false;\n  }\n}\n\nmodule.exports = DateXform;\n"],"mappings":"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"}