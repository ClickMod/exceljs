{"version":3,"file":"conditional-formatting-ext-xform.js","names":["CompositeXform","require","SqRefExtXform","CfRuleExtXform","ConditionalFormattingExtXform","_CompositeXform","_inherits","_super","_createSuper","_this","_classCallCheck","call","map","sqRef","cfRule","_createClass","key","get","value","prepare","model","options","_this2","rules","forEach","rule","render","xmlStream","_this3","some","isExt","openNode","tag","filter","ref","closeNode","createNewModel","onParserClose","name","parser","push","module","exports"],"sources":["../../../../../../lib/xlsx/xform/sheet/cf-ext/conditional-formatting-ext-xform.js"],"sourcesContent":["const CompositeXform = require('../../composite-xform');\n\nconst SqRefExtXform = require('./sqref-ext-xform');\nconst CfRuleExtXform = require('./cf-rule-ext-xform');\n\nclass ConditionalFormattingExtXform extends CompositeXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'xm:sqref': (this.sqRef = new SqRefExtXform()),\n      'x14:cfRule': (this.cfRule = new CfRuleExtXform()),\n    };\n  }\n\n  get tag() {\n    return 'x14:conditionalFormatting';\n  }\n\n  prepare(model, options) {\n    model.rules.forEach(rule => {\n      this.cfRule.prepare(rule, options);\n    });\n  }\n\n  render(xmlStream, model) {\n    if (!model.rules.some(CfRuleExtXform.isExt)) {\n      return;\n    }\n\n    xmlStream.openNode(this.tag, {\n      'xmlns:xm': 'http://schemas.microsoft.com/office/excel/2006/main',\n    });\n\n    model.rules.filter(CfRuleExtXform.isExt).forEach(rule => this.cfRule.render(xmlStream, rule));\n\n    // for some odd reason, Excel needs the <xm:sqref> node to be after the rules\n    this.sqRef.render(xmlStream, model.ref);\n\n    xmlStream.closeNode();\n  }\n\n  createNewModel() {\n    return {\n      rules: [],\n    };\n  }\n\n  onParserClose(name, parser) {\n    switch (name) {\n      case 'xm:sqref':\n        this.model.ref = parser.model;\n        break;\n\n      case 'x14:cfRule':\n        this.model.rules.push(parser.model);\n        break;\n    }\n  }\n}\n\nmodule.exports = ConditionalFormattingExtXform;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAEvD,IAAMC,aAAa,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAClD,IAAME,cAAc,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAAC,IAEhDG,6BAA6B,0BAAAC,eAAA;EAAAC,SAAA,CAAAF,6BAAA,EAAAC,eAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,6BAAA;EACjC,SAAAA,8BAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,6BAAA;IACZK,KAAA,GAAAF,MAAA,CAAAI,IAAA;IAEAF,KAAA,CAAKG,GAAG,GAAG;MACT,UAAU,EAAGH,KAAA,CAAKI,KAAK,GAAG,IAAIX,aAAa,CAAC,CAAE;MAC9C,YAAY,EAAGO,KAAA,CAAKK,MAAM,GAAG,IAAIX,cAAc,CAAC;IAClD,CAAC;IAAC,OAAAM,KAAA;EACJ;EAACM,YAAA,CAAAX,6BAAA;IAAAY,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAU;MACR,OAAO,2BAA2B;IACpC;EAAC;IAAAD,GAAA;IAAAE,KAAA,EAED,SAAAC,QAAQC,KAAK,EAAEC,OAAO,EAAE;MAAA,IAAAC,MAAA;MACtBF,KAAK,CAACG,KAAK,CAACC,OAAO,CAAC,UAAAC,IAAI,EAAI;QAC1BH,MAAI,CAACR,MAAM,CAACK,OAAO,CAACM,IAAI,EAAEJ,OAAO,CAAC;MACpC,CAAC,CAAC;IACJ;EAAC;IAAAL,GAAA;IAAAE,KAAA,EAED,SAAAQ,OAAOC,SAAS,EAAEP,KAAK,EAAE;MAAA,IAAAQ,MAAA;MACvB,IAAI,CAACR,KAAK,CAACG,KAAK,CAACM,IAAI,CAAC1B,cAAc,CAAC2B,KAAK,CAAC,EAAE;QAC3C;MACF;MAEAH,SAAS,CAACI,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;QAC3B,UAAU,EAAE;MACd,CAAC,CAAC;MAEFZ,KAAK,CAACG,KAAK,CAACU,MAAM,CAAC9B,cAAc,CAAC2B,KAAK,CAAC,CAACN,OAAO,CAAC,UAAAC,IAAI;QAAA,OAAIG,MAAI,CAACd,MAAM,CAACY,MAAM,CAACC,SAAS,EAAEF,IAAI,CAAC;MAAA,EAAC;;MAE7F;MACA,IAAI,CAACZ,KAAK,CAACa,MAAM,CAACC,SAAS,EAAEP,KAAK,CAACc,GAAG,CAAC;MAEvCP,SAAS,CAACQ,SAAS,CAAC,CAAC;IACvB;EAAC;IAAAnB,GAAA;IAAAE,KAAA,EAED,SAAAkB,eAAA,EAAiB;MACf,OAAO;QACLb,KAAK,EAAE;MACT,CAAC;IACH;EAAC;IAAAP,GAAA;IAAAE,KAAA,EAED,SAAAmB,cAAcC,IAAI,EAAEC,MAAM,EAAE;MAC1B,QAAQD,IAAI;QACV,KAAK,UAAU;UACb,IAAI,CAAClB,KAAK,CAACc,GAAG,GAAGK,MAAM,CAACnB,KAAK;UAC7B;QAEF,KAAK,YAAY;UACf,IAAI,CAACA,KAAK,CAACG,KAAK,CAACiB,IAAI,CAACD,MAAM,CAACnB,KAAK,CAAC;UACnC;MACJ;IACF;EAAC;EAAA,OAAAhB,6BAAA;AAAA,EArDyCJ,cAAc;AAwD1DyC,MAAM,CAACC,OAAO,GAAGtC,6BAA6B"}