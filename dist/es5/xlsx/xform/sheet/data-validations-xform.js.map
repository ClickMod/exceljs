{"version":3,"file":"data-validations-xform.js","names":["_","require","utils","colCache","BaseXform","Range","assign","definedName","attributes","name","defaultValue","value","undefined","assignBool","parseBoolean","optimiseDataValidations","model","dvList","map","dataValidation","address","marked","sort","a","b","strcmp","dvMap","keyBy","matchCol","addr","height","col","i","otherAddress","encodeAddress","row","isEqual","dv","decodeEx","dimensions","_objectSpread","sqref","width","j","bottom","right","concat","filter","Boolean","DataValidationsXform","_BaseXform","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","render","xmlStream","optimizedModel","length","openNode","count","forEach","type","addAttribute","operator","allowBlank","showInputMessage","promptTitle","prompt","showErrorMessage","errorStyle","errorTitle","error","formulae","formula","index","writeText","dateToExcel","Date","closeNode","parseOpen","node","_address","_dataValidation","_formula","parseText","text","push","parseClose","_this","list","split","includes","range","forEachAddress","join","parseInt","parseFloat","excelToDate","module","exports"],"sources":["../../../../../lib/xlsx/xform/sheet/data-validations-xform.js"],"sourcesContent":["const _ = require('../../../utils/under-dash');\nconst utils = require('../../../utils/utils');\nconst colCache = require('../../../utils/col-cache');\nconst BaseXform = require('../base-xform');\nconst Range = require('../../../doc/range');\n\nfunction assign(definedName, attributes, name, defaultValue) {\n  const value = attributes[name];\n  if (value !== undefined) {\n    definedName[name] = value;\n  } else if (defaultValue !== undefined) {\n    definedName[name] = defaultValue;\n  }\n}\n\nfunction assignBool(definedName, attributes, name, defaultValue) {\n  const value = attributes[name];\n  if (value !== undefined) {\n    definedName[name] = utils.parseBoolean(value);\n  } else if (defaultValue !== undefined) {\n    definedName[name] = defaultValue;\n  }\n}\n\nfunction optimiseDataValidations(model) {\n  // Squeeze alike data validations together into rectangular ranges\n  // to reduce file size and speed up Excel load time\n  const dvList = _.map(model, (dataValidation, address) => ({\n    address,\n    dataValidation,\n    marked: false,\n  })).sort((a, b) => _.strcmp(a.address, b.address));\n  const dvMap = _.keyBy(dvList, 'address');\n  const matchCol = (addr, height, col) => {\n    for (let i = 0; i < height; i++) {\n      const otherAddress = colCache.encodeAddress(addr.row + i, col);\n      if (!model[otherAddress] || !_.isEqual(model[addr.address], model[otherAddress])) {\n        return false;\n      }\n    }\n    return true;\n  };\n  return dvList\n    .map(dv => {\n      if (!dv.marked) {\n        const addr = colCache.decodeEx(dv.address);\n        if (addr.dimensions) {\n          dvMap[addr.dimensions].marked = true;\n          return {\n            ...dv.dataValidation,\n            sqref: dv.address,\n          };\n        }\n\n        // iterate downwards - finding matching cells\n        let height = 1;\n        let otherAddress = colCache.encodeAddress(addr.row + height, addr.col);\n        while (model[otherAddress] && _.isEqual(dv.dataValidation, model[otherAddress])) {\n          height++;\n          otherAddress = colCache.encodeAddress(addr.row + height, addr.col);\n        }\n\n        // iterate rightwards...\n\n        let width = 1;\n        while (matchCol(addr, height, addr.col + width)) {\n          width++;\n        }\n\n        // mark all included addresses\n        for (let i = 0; i < height; i++) {\n          for (let j = 0; j < width; j++) {\n            otherAddress = colCache.encodeAddress(addr.row + i, addr.col + j);\n            dvMap[otherAddress].marked = true;\n          }\n        }\n\n        if (height > 1 || width > 1) {\n          const bottom = addr.row + (height - 1);\n          const right = addr.col + (width - 1);\n          return {\n            ...dv.dataValidation,\n            sqref: `${dv.address}:${colCache.encodeAddress(bottom, right)}`,\n          };\n        }\n        return {\n          ...dv.dataValidation,\n          sqref: dv.address,\n        };\n      }\n      return null;\n    })\n    .filter(Boolean);\n}\n\nclass DataValidationsXform extends BaseXform {\n  get tag() {\n    return 'dataValidations';\n  }\n\n  render(xmlStream, model) {\n    const optimizedModel = optimiseDataValidations(model);\n    if (optimizedModel.length) {\n      xmlStream.openNode('dataValidations', {count: optimizedModel.length});\n\n      optimizedModel.forEach(value => {\n        xmlStream.openNode('dataValidation');\n\n        if (value.type !== 'any') {\n          xmlStream.addAttribute('type', value.type);\n\n          if (value.operator && value.type !== 'list' && value.operator !== 'between') {\n            xmlStream.addAttribute('operator', value.operator);\n          }\n          if (value.allowBlank) {\n            xmlStream.addAttribute('allowBlank', '1');\n          }\n        }\n        if (value.showInputMessage) {\n          xmlStream.addAttribute('showInputMessage', '1');\n        }\n        if (value.promptTitle) {\n          xmlStream.addAttribute('promptTitle', value.promptTitle);\n        }\n        if (value.prompt) {\n          xmlStream.addAttribute('prompt', value.prompt);\n        }\n        if (value.showErrorMessage) {\n          xmlStream.addAttribute('showErrorMessage', '1');\n        }\n        if (value.errorStyle) {\n          xmlStream.addAttribute('errorStyle', value.errorStyle);\n        }\n        if (value.errorTitle) {\n          xmlStream.addAttribute('errorTitle', value.errorTitle);\n        }\n        if (value.error) {\n          xmlStream.addAttribute('error', value.error);\n        }\n        xmlStream.addAttribute('sqref', value.sqref);\n        (value.formulae || []).forEach((formula, index) => {\n          xmlStream.openNode(`formula${index + 1}`);\n          if (value.type === 'date') {\n            xmlStream.writeText(utils.dateToExcel(new Date(formula)));\n          } else {\n            xmlStream.writeText(formula);\n          }\n          xmlStream.closeNode();\n        });\n        xmlStream.closeNode();\n      });\n      xmlStream.closeNode();\n    }\n  }\n\n  parseOpen(node) {\n    switch (node.name) {\n      case 'dataValidations':\n        this.model = {};\n        return true;\n\n      case 'dataValidation': {\n        this._address = node.attributes.sqref;\n        const dataValidation = {type: node.attributes.type || 'any', formulae: []};\n\n        if (node.attributes.type) {\n          assignBool(dataValidation, node.attributes, 'allowBlank');\n        }\n        assignBool(dataValidation, node.attributes, 'showInputMessage');\n        assignBool(dataValidation, node.attributes, 'showErrorMessage');\n\n        switch (dataValidation.type) {\n          case 'any':\n          case 'list':\n          case 'custom':\n            break;\n          default:\n            assign(dataValidation, node.attributes, 'operator', 'between');\n            break;\n        }\n        assign(dataValidation, node.attributes, 'promptTitle');\n        assign(dataValidation, node.attributes, 'prompt');\n        assign(dataValidation, node.attributes, 'errorStyle');\n        assign(dataValidation, node.attributes, 'errorTitle');\n        assign(dataValidation, node.attributes, 'error');\n\n        this._dataValidation = dataValidation;\n        return true;\n      }\n\n      case 'formula1':\n      case 'formula2':\n        this._formula = [];\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this._formula) {\n      this._formula.push(text);\n    }\n  }\n\n  parseClose(name) {\n    switch (name) {\n      case 'dataValidations':\n        return false;\n      case 'dataValidation': {\n        if (!this._dataValidation.formulae || !this._dataValidation.formulae.length) {\n          delete this._dataValidation.formulae;\n          delete this._dataValidation.operator;\n        }\n        // The four known cases: 1. E4:L9 N4:U9  2.E4 L9  3. N4:U9  4. E4\n        const list = this._address.split(/\\s+/g) || [];\n        list.forEach(addr => {\n          if (addr.includes(':')) {\n            const range = new Range(addr);\n            range.forEachAddress(address => {\n              this.model[address] = this._dataValidation;\n            });\n          } else {\n            this.model[addr] = this._dataValidation;\n          }\n        });\n        return true;\n      }\n      case 'formula1':\n      case 'formula2': {\n        let formula = this._formula.join('');\n        switch (this._dataValidation.type) {\n          case 'whole':\n          case 'textLength':\n            formula = parseInt(formula, 10);\n            break;\n          case 'decimal':\n            formula = parseFloat(formula);\n            break;\n          case 'date':\n            formula = utils.excelToDate(parseFloat(formula));\n            break;\n          default:\n            break;\n        }\n        this._dataValidation.formulae.push(formula);\n        this._formula = undefined;\n        return true;\n      }\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = DataValidationsXform;\n"],"mappings":"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"}