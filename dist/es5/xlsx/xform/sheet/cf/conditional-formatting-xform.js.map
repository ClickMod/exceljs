{"version":3,"file":"conditional-formatting-xform.js","names":["CompositeXform","require","CfRuleXform","ConditionalFormattingXform","_CompositeXform","_inherits","_super","_createSuper","_this","_classCallCheck","call","map","cfRule","_createClass","key","get","value","render","xmlStream","model","_this2","rules","some","isPrimitive","openNode","tag","sqref","ref","forEach","rule","closeNode","createNewModel","_ref","attributes","onParserClose","name","parser","push","module","exports"],"sources":["../../../../../../lib/xlsx/xform/sheet/cf/conditional-formatting-xform.js"],"sourcesContent":["const CompositeXform = require('../../composite-xform');\n\nconst CfRuleXform = require('./cf-rule-xform');\n\nclass ConditionalFormattingXform extends CompositeXform {\n  constructor() {\n    super();\n\n    this.map = {\n      cfRule: new CfRuleXform(),\n    };\n  }\n\n  get tag() {\n    return 'conditionalFormatting';\n  }\n\n  render(xmlStream, model) {\n    // if there are no primitive rules, exit now\n    if (!model.rules.some(CfRuleXform.isPrimitive)) {\n      return;\n    }\n\n    xmlStream.openNode(this.tag, {sqref: model.ref});\n\n    model.rules.forEach(rule => {\n      if (CfRuleXform.isPrimitive(rule)) {\n        rule.ref = model.ref;\n        this.map.cfRule.render(xmlStream, rule);\n      }\n    });\n\n    xmlStream.closeNode();\n  }\n\n  createNewModel({attributes}) {\n    return {\n      ref: attributes.sqref,\n      rules: [],\n    };\n  }\n\n  onParserClose(name, parser) {\n    this.model.rules.push(parser.model);\n  }\n}\n\nmodule.exports = ConditionalFormattingXform;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAEvD,IAAMC,WAAW,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAAC,IAEzCE,0BAA0B,0BAAAC,eAAA;EAAAC,SAAA,CAAAF,0BAAA,EAAAC,eAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,0BAAA;EAC9B,SAAAA,2BAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,0BAAA;IACZK,KAAA,GAAAF,MAAA,CAAAI,IAAA;IAEAF,KAAA,CAAKG,GAAG,GAAG;MACTC,MAAM,EAAE,IAAIV,WAAW,CAAC;IAC1B,CAAC;IAAC,OAAAM,KAAA;EACJ;EAACK,YAAA,CAAAV,0BAAA;IAAAW,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAU;MACR,OAAO,uBAAuB;IAChC;EAAC;IAAAD,GAAA;IAAAE,KAAA,EAED,SAAAC,OAAOC,SAAS,EAAEC,KAAK,EAAE;MAAA,IAAAC,MAAA;MACvB;MACA,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,IAAI,CAACpB,WAAW,CAACqB,WAAW,CAAC,EAAE;QAC9C;MACF;MAEAL,SAAS,CAACM,QAAQ,CAAC,IAAI,CAACC,GAAG,EAAE;QAACC,KAAK,EAAEP,KAAK,CAACQ;MAAG,CAAC,CAAC;MAEhDR,KAAK,CAACE,KAAK,CAACO,OAAO,CAAC,UAAAC,IAAI,EAAI;QAC1B,IAAI3B,WAAW,CAACqB,WAAW,CAACM,IAAI,CAAC,EAAE;UACjCA,IAAI,CAACF,GAAG,GAAGR,KAAK,CAACQ,GAAG;UACpBP,MAAI,CAACT,GAAG,CAACC,MAAM,CAACK,MAAM,CAACC,SAAS,EAAEW,IAAI,CAAC;QACzC;MACF,CAAC,CAAC;MAEFX,SAAS,CAACY,SAAS,CAAC,CAAC;IACvB;EAAC;IAAAhB,GAAA;IAAAE,KAAA,EAED,SAAAe,eAAAC,IAAA,EAA6B;MAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;MACxB,OAAO;QACLN,GAAG,EAAEM,UAAU,CAACP,KAAK;QACrBL,KAAK,EAAE;MACT,CAAC;IACH;EAAC;IAAAP,GAAA;IAAAE,KAAA,EAED,SAAAkB,cAAcC,IAAI,EAAEC,MAAM,EAAE;MAC1B,IAAI,CAACjB,KAAK,CAACE,KAAK,CAACgB,IAAI,CAACD,MAAM,CAACjB,KAAK,CAAC;IACrC;EAAC;EAAA,OAAAhB,0BAAA;AAAA,EAxCsCH,cAAc;AA2CvDsC,MAAM,CAACC,OAAO,GAAGpC,0BAA0B"}