{"version":3,"file":"row.js","names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","_","require","Enums","colCache","Cell","Row","worksheet","number","_worksheet","_number","_cells","style","outlineLevel","get","value","commit","_commitRow","destroy","findCell","colNumber","getCellEx","address","cell","col","column","getColumn","getCell","getColumnKey","l2n","encodeAddress","row","splice","start","count","nKeep","_len","arguments","inserts","Array","_key","nExpand","nEnd","cSrc","cDst","_comment","eachCell","options","iteratee","includeEmpty","n","forEach","index","type","ValueType","Null","addPageBreak","lft","rght","ws","left","Math","max","right","pb","id","man","min","rowBreaks","push","values","set","_this","offset","hasOwnProperty","item","eachColumnKey","some","_applyStyle","name","numFmt","font","alignment","protection","border","fill","_hidden","_outlineLevel","properties","outlineLevelRow","cells","cellModel","model","height","hidden","collapsed","_this2","Error","previousAddress","Types","Merge","decodeAddress","_previousAddress","$col$row","concat","n2l","JSON","parse","stringify","module","exports"],"sources":["../../../lib/doc/row.js"],"sourcesContent":["'use strict';\n\nconst _ = require('../utils/under-dash');\n\nconst Enums = require('./enums');\nconst colCache = require('../utils/col-cache');\nconst Cell = require('./cell');\n\nclass Row {\n  constructor(worksheet, number) {\n    this._worksheet = worksheet;\n    this._number = number;\n    this._cells = [];\n    this.style = {};\n    this.outlineLevel = 0;\n  }\n\n  // return the row number\n  get number() {\n    return this._number;\n  }\n\n  get worksheet() {\n    return this._worksheet;\n  }\n\n  // Inform Streaming Writer that this row (and all rows before it) are complete\n  // and ready to write. Has no effect on Worksheet document\n  commit() {\n    this._worksheet._commitRow(this); // eslint-disable-line no-underscore-dangle\n  }\n\n  // helps GC by breaking cyclic references\n  destroy() {\n    delete this._worksheet;\n    delete this._cells;\n    delete this.style;\n  }\n\n  findCell(colNumber) {\n    return this._cells[colNumber - 1];\n  }\n\n  // given {address, row, col}, find or create new cell\n  getCellEx(address) {\n    let cell = this._cells[address.col - 1];\n    if (!cell) {\n      const column = this._worksheet.getColumn(address.col);\n      cell = new Cell(this, column, address.address);\n      this._cells[address.col - 1] = cell;\n    }\n    return cell;\n  }\n\n  // get cell by key, letter or column number\n  getCell(col) {\n    if (typeof col === 'string') {\n      // is it a key?\n      const column = this._worksheet.getColumnKey(col);\n      if (column) {\n        col = column.number;\n      } else {\n        col = colCache.l2n(col);\n      }\n    }\n    return (\n      this._cells[col - 1] ||\n      this.getCellEx({\n        address: colCache.encodeAddress(this._number, col),\n        row: this._number,\n        col,\n      })\n    );\n  }\n\n  // remove cell(s) and shift all higher cells down by count\n  splice(start, count, ...inserts) {\n    const nKeep = start + count;\n    const nExpand = inserts.length - count;\n    const nEnd = this._cells.length;\n    let i;\n    let cSrc;\n    let cDst;\n\n    if (nExpand < 0) {\n      // remove cells\n      for (i = start + inserts.length; i <= nEnd; i++) {\n        cDst = this._cells[i - 1];\n        cSrc = this._cells[i - nExpand - 1];\n        if (cSrc) {\n          cDst = this.getCell(i);\n          cDst.value = cSrc.value;\n          cDst.style = cSrc.style;\n          // eslint-disable-next-line no-underscore-dangle\n          cDst._comment = cSrc._comment;\n        } else if (cDst) {\n          cDst.value = null;\n          cDst.style = {};\n          // eslint-disable-next-line no-underscore-dangle\n          cDst._comment = undefined;\n        }\n      }\n    } else if (nExpand > 0) {\n      // insert new cells\n      for (i = nEnd; i >= nKeep; i--) {\n        cSrc = this._cells[i - 1];\n        if (cSrc) {\n          cDst = this.getCell(i + nExpand);\n          cDst.value = cSrc.value;\n          cDst.style = cSrc.style;\n          // eslint-disable-next-line no-underscore-dangle\n          cDst._comment = cSrc._comment;\n        } else {\n          this._cells[i + nExpand - 1] = undefined;\n        }\n      }\n    }\n\n    // now add the new values\n    for (i = 0; i < inserts.length; i++) {\n      cDst = this.getCell(start + i);\n      cDst.value = inserts[i];\n      cDst.style = {};\n      // eslint-disable-next-line no-underscore-dangle\n      cDst._comment = undefined;\n    }\n  }\n\n  // Iterate over all non-null cells in this row\n  eachCell(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = null;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._cells.length;\n      for (let i = 1; i <= n; i++) {\n        iteratee(this.getCell(i), i);\n      }\n    } else {\n      this._cells.forEach((cell, index) => {\n        if (cell && cell.type !== Enums.ValueType.Null) {\n          iteratee(cell, index + 1);\n        }\n      });\n    }\n  }\n\n  // ===========================================================================\n  // Page Breaks\n  addPageBreak(lft, rght) {\n    const ws = this._worksheet;\n    const left = Math.max(0, lft - 1) || 0;\n    const right = Math.max(0, rght - 1) || 16838;\n    const pb = {\n      id: this._number,\n      max: right,\n      man: 1,\n    };\n    if (left) pb.min = left;\n\n    ws.rowBreaks.push(pb);\n  }\n\n  // return a sparse array of cell values\n  get values() {\n    const values = [];\n    this._cells.forEach(cell => {\n      if (cell && cell.type !== Enums.ValueType.Null) {\n        values[cell.col] = cell.value;\n      }\n    });\n    return values;\n  }\n\n  // set the values by contiguous or sparse array, or by key'd object literal\n  set values(value) {\n    // this operation is not additive - any prior cells are removed\n    this._cells = [];\n    if (!value) {\n      // empty row\n    } else if (value instanceof Array) {\n      let offset = 0;\n      if (value.hasOwnProperty('0')) {\n        // contiguous array - start at column 1\n        offset = 1;\n      }\n      value.forEach((item, index) => {\n        if (item !== undefined) {\n          this.getCellEx({\n            address: colCache.encodeAddress(this._number, index + offset),\n            row: this._number,\n            col: index + offset,\n          }).value = item;\n        }\n      });\n    } else {\n      // assume object with column keys\n      this._worksheet.eachColumnKey((column, key) => {\n        if (value[key] !== undefined) {\n          this.getCellEx({\n            address: colCache.encodeAddress(this._number, column.number),\n            row: this._number,\n            col: column.number,\n          }).value = value[key];\n        }\n      });\n    }\n  }\n\n  // returns true if the row includes at least one cell with a value\n  get hasValues() {\n    return _.some(this._cells, cell => cell && cell.type !== Enums.ValueType.Null);\n  }\n\n  get cellCount() {\n    return this._cells.length;\n  }\n\n  get actualCellCount() {\n    let count = 0;\n    this.eachCell(() => {\n      count++;\n    });\n    return count;\n  }\n\n  // get the min and max column number for the non-null cells in this row or null\n  get dimensions() {\n    let min = 0;\n    let max = 0;\n    this._cells.forEach(cell => {\n      if (cell && cell.type !== Enums.ValueType.Null) {\n        if (!min || min > cell.col) {\n          min = cell.col;\n        }\n        if (max < cell.col) {\n          max = cell.col;\n        }\n      }\n    });\n    return min > 0\n      ? {\n          min,\n          max,\n        }\n      : null;\n  }\n\n  // =========================================================================\n  // styles\n  _applyStyle(name, value) {\n    this.style[name] = value;\n    this._cells.forEach(cell => {\n      if (cell) {\n        cell[name] = value;\n      }\n    });\n    return value;\n  }\n\n  get numFmt() {\n    return this.style.numFmt;\n  }\n\n  set numFmt(value) {\n    this._applyStyle('numFmt', value);\n  }\n\n  get font() {\n    return this.style.font;\n  }\n\n  set font(value) {\n    this._applyStyle('font', value);\n  }\n\n  get alignment() {\n    return this.style.alignment;\n  }\n\n  set alignment(value) {\n    this._applyStyle('alignment', value);\n  }\n\n  get protection() {\n    return this.style.protection;\n  }\n\n  set protection(value) {\n    this._applyStyle('protection', value);\n  }\n\n  get border() {\n    return this.style.border;\n  }\n\n  set border(value) {\n    this._applyStyle('border', value);\n  }\n\n  get fill() {\n    return this.style.fill;\n  }\n\n  set fill(value) {\n    this._applyStyle('fill', value);\n  }\n\n  get hidden() {\n    return !!this._hidden;\n  }\n\n  set hidden(value) {\n    this._hidden = value;\n  }\n\n  get outlineLevel() {\n    return this._outlineLevel || 0;\n  }\n\n  set outlineLevel(value) {\n    this._outlineLevel = value;\n  }\n\n  get collapsed() {\n    return !!(\n      this._outlineLevel && this._outlineLevel >= this._worksheet.properties.outlineLevelRow\n    );\n  }\n\n  // =========================================================================\n  get model() {\n    const cells = [];\n    let min = 0;\n    let max = 0;\n    this._cells.forEach(cell => {\n      if (cell) {\n        const cellModel = cell.model;\n        if (cellModel) {\n          if (!min || min > cell.col) {\n            min = cell.col;\n          }\n          if (max < cell.col) {\n            max = cell.col;\n          }\n          cells.push(cellModel);\n        }\n      }\n    });\n\n    return this.height || cells.length\n      ? {\n          cells,\n          number: this.number,\n          min,\n          max,\n          height: this.height,\n          style: this.style,\n          hidden: this.hidden,\n          outlineLevel: this.outlineLevel,\n          collapsed: this.collapsed,\n        }\n      : null;\n  }\n\n  set model(value) {\n    if (value.number !== this._number) {\n      throw new Error('Invalid row number in model');\n    }\n    this._cells = [];\n    let previousAddress;\n    value.cells.forEach(cellModel => {\n      switch (cellModel.type) {\n        case Cell.Types.Merge:\n          // special case - don't add this types\n          break;\n        default: {\n          let address;\n          if (cellModel.address) {\n            address = colCache.decodeAddress(cellModel.address);\n          } else if (previousAddress) {\n            // This is a <c> element without an r attribute\n            // Assume that it's the cell for the next column\n            const {row} = previousAddress;\n            const col = previousAddress.col + 1;\n            address = {\n              row,\n              col,\n              address: colCache.encodeAddress(row, col),\n              $col$row: `$${colCache.n2l(col)}$${row}`,\n            };\n          }\n          previousAddress = address;\n          const cell = this.getCellEx(address);\n          cell.model = cellModel;\n          break;\n        }\n      }\n    });\n\n    if (value.height) {\n      this.height = value.height;\n    } else {\n      delete this.height;\n    }\n\n    this.hidden = value.hidden;\n    this.outlineLevel = value.outlineLevel || 0;\n\n    this.style = (value.style && JSON.parse(JSON.stringify(value.style))) || {};\n  }\n}\n\nmodule.exports = Row;\n"],"mappings":"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"}