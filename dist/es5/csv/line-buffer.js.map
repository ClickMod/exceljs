{"version":3,"file":"line-buffer.js","names":["_require","require","EventEmitter","LineBuffer","_EventEmitter","_inherits","_super","_createSuper","options","_this","_classCallCheck","call","encoding","buffer","corked","queue","_createClass","key","value","write","chunk","data","lines","split","pop","forEach","line","push","emit","cork","uncork","_flush","setDefaultEncoding","end","_this2","module","exports"],"sources":["../../../lib/csv/line-buffer.js"],"sourcesContent":["const {EventEmitter} = require('events');\n\nclass LineBuffer extends EventEmitter {\n  constructor(options) {\n    super();\n\n    this.encoding = options.encoding;\n\n    this.buffer = null;\n\n    // part of cork/uncork\n    this.corked = false;\n    this.queue = [];\n  }\n\n  // Events:\n  //  line: here is a line\n  //  done: all lines emitted\n\n  write(chunk) {\n    // find line or lines in chunk and emit them if not corked\n    // or queue them if corked\n    const data = this.buffer ? this.buffer + chunk : chunk;\n    const lines = data.split(/\\r?\\n/g);\n\n    // save the last line\n    this.buffer = lines.pop();\n\n    lines.forEach(function(line) {\n      if (this.corked) {\n        this.queue.push(line);\n      } else {\n        this.emit('line', line);\n      }\n    });\n\n    return !this.corked;\n  }\n\n  cork() {\n    this.corked = true;\n  }\n\n  uncork() {\n    this.corked = false;\n    this._flush();\n\n    // tell the source I'm ready again\n    this.emit('drain');\n  }\n\n  setDefaultEncoding() {\n    // ?\n  }\n\n  end() {\n    if (this.buffer) {\n      this.emit('line', this.buffer);\n      this.buffer = null;\n    }\n    this.emit('done');\n  }\n\n  _flush() {\n    if (!this.corked) {\n      this.queue.forEach(line => {\n        this.emit('line', line);\n      });\n      this.queue = [];\n    }\n  }\n}\n\nmodule.exports = LineBuffer;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAAA,QAAA,GAAuBC,OAAO,CAAC,QAAQ,CAAC;EAAjCC,YAAY,GAAAF,QAAA,CAAZE,YAAY;AAAsB,IAEnCC,UAAU,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EACd,SAAAA,WAAYK,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,UAAA;IACnBM,KAAA,GAAAH,MAAA,CAAAK,IAAA;IAEAF,KAAA,CAAKG,QAAQ,GAAGJ,OAAO,CAACI,QAAQ;IAEhCH,KAAA,CAAKI,MAAM,GAAG,IAAI;;IAElB;IACAJ,KAAA,CAAKK,MAAM,GAAG,KAAK;IACnBL,KAAA,CAAKM,KAAK,GAAG,EAAE;IAAC,OAAAN,KAAA;EAClB;;EAEA;EACA;EACA;EAAAO,YAAA,CAAAb,UAAA;IAAAc,GAAA;IAAAC,KAAA,EAEA,SAAAC,MAAMC,KAAK,EAAE;MACX;MACA;MACA,IAAMC,IAAI,GAAG,IAAI,CAACR,MAAM,GAAG,IAAI,CAACA,MAAM,GAAGO,KAAK,GAAGA,KAAK;MACtD,IAAME,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,QAAQ,CAAC;;MAElC;MACA,IAAI,CAACV,MAAM,GAAGS,KAAK,CAACE,GAAG,CAAC,CAAC;MAEzBF,KAAK,CAACG,OAAO,CAAC,UAASC,IAAI,EAAE;QAC3B,IAAI,IAAI,CAACZ,MAAM,EAAE;UACf,IAAI,CAACC,KAAK,CAACY,IAAI,CAACD,IAAI,CAAC;QACvB,CAAC,MAAM;UACL,IAAI,CAACE,IAAI,CAAC,MAAM,EAAEF,IAAI,CAAC;QACzB;MACF,CAAC,CAAC;MAEF,OAAO,CAAC,IAAI,CAACZ,MAAM;IACrB;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAW,KAAA,EAAO;MACL,IAAI,CAACf,MAAM,GAAG,IAAI;IACpB;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAY,OAAA,EAAS;MACP,IAAI,CAAChB,MAAM,GAAG,KAAK;MACnB,IAAI,CAACiB,MAAM,CAAC,CAAC;;MAEb;MACA,IAAI,CAACH,IAAI,CAAC,OAAO,CAAC;IACpB;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAc,mBAAA,EAAqB;MACnB;IAAA;EACD;IAAAf,GAAA;IAAAC,KAAA,EAED,SAAAe,IAAA,EAAM;MACJ,IAAI,IAAI,CAACpB,MAAM,EAAE;QACf,IAAI,CAACe,IAAI,CAAC,MAAM,EAAE,IAAI,CAACf,MAAM,CAAC;QAC9B,IAAI,CAACA,MAAM,GAAG,IAAI;MACpB;MACA,IAAI,CAACe,IAAI,CAAC,MAAM,CAAC;IACnB;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAa,OAAA,EAAS;MAAA,IAAAG,MAAA;MACP,IAAI,CAAC,IAAI,CAACpB,MAAM,EAAE;QAChB,IAAI,CAACC,KAAK,CAACU,OAAO,CAAC,UAAAC,IAAI,EAAI;UACzBQ,MAAI,CAACN,IAAI,CAAC,MAAM,EAAEF,IAAI,CAAC;QACzB,CAAC,CAAC;QACF,IAAI,CAACX,KAAK,GAAG,EAAE;MACjB;IACF;EAAC;EAAA,OAAAZ,UAAA;AAAA,EApEsBD,YAAY;AAuErCiC,MAAM,CAACC,OAAO,GAAGjC,UAAU"}